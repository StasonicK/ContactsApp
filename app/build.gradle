apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion rootProject.compile_Sdk_version
    buildToolsVersion "29.0.3"
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "com.eburg_soft.contactsapp"
        minSdkVersion rootProject.min_Sdk_version
        targetSdkVersion rootProject.target_Sdk_version
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true",
                        "room.schemaLocation"  : "$projectDir/schemas".toString()
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:' + rootProject.core_version
    implementation 'androidx.legacy:legacy-support-v4:' + rootProject.legacy_support_version

    implementation 'androidx.appcompat:appcompat:' + rootProject.appcompat_version
    implementation 'androidx.coordinatorlayout:coordinatorlayout:' + rootProject.coordinator_layout_version
    implementation 'androidx.recyclerview:recyclerview:' + rootProject.appcompat_version
    implementation 'androidx.cardview:cardview:' + rootProject.cardview_version
    implementation 'androidx.constraintlayout:constraintlayout:' + rootProject.constraint_layout_version
    implementation 'com.google.android.material:material:' + rootProject.material_version

    //WorkManager
    implementation "android.arch.work:work-runtime:" + rootProject.work_manager_version

    //Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.retrofit_version
    implementation 'com.squareup.retrofit2:adapter-rxjava2:' + rootProject.retrofit_version
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.retrofit_version
    implementation('com.squareup.retrofit2:retrofit:' + rootProject.retrofit_version) {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.okhttp3:logging-interceptor:' + rootProject.okhttp3_version
    implementation 'com.squareup.okhttp3:okhttp:' + rootProject.okhttp3_version

    //gson
    implementation 'com.google.code.gson:gson:' + rootProject.gson_version

    // Instrumentation tests (use JUnit4)
    androidTestImplementation 'junit:junit:4.13'

    // AndroidX test
    def androidx_test_version = "1.3.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Architecture components testing
    def androidx_arch_test_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    // Local unit tests (use JUnit5)
    // JUnit Jupiter
    def junit_jupiter_version = "5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    // Mockito
    def mockito_version = "2.28.2"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"

    // Dagger
    def dagger_version = "2.26"

    // Dagger2 core
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Material design
    def material_version = "1.2.0"
    implementation "com.google.android.material:material:$material_version"

    // Room DB
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // ViewModel and LiveData
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    // RxJava
    def rxjava_version = '2.2.19'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // RxAndroid
    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    testImplementation 'org.robolectric:robolectric:4.3.1'

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha07"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
